<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<!--
This tmLanguage file was adapted from the one at https://github.com/textmate/d.tmbundle
under the following licence:

Permission to copy, use, modify, sell and distribute this
software is granted. This software is provided "as is" without
express or implied warranty, and with no claim as to its
suitability for any purpose.
-->
<dict>
	<key>fileTypes</key>
	<array>
		<string>*.volt</string>
	</array>
	<key>name</key>
	<string>volt</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>\A#!.+</string>
			<key>name</key>
			<string>comment.line.number-sign.shebang.volt</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.volt</string>
				</dict>
			</dict>
			<key>match</key>
			<string>/\*\*/</string>
			<key>name</key>
			<string>comment.block.empty.volt</string>
		</dict>
		<dict>
			<key>include</key>
			<string>text.html.javadoc</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.debug.volt</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.other.debug.volt</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.other.debug.volt</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*(\b(deprecated|unittest|debug)\b|(\b(static)\b\s+)?\b(assert)\b)</string>
			<key>name</key>
			<string>meta.other.debug.volt</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.version.volt</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.version.volt</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.language.version.volt</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>invalid.deprecated.version.volt</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)(?&lt;=^|\}|:)\s*
					(else\s+)?(version)\s*
					\(\s*
					((DigitalMars|
					GNU|
					LDC|
					SDC|
					Windows|
					Win32|
					Win64|
					linux|
					OSX|
					FreeBSD|
					OpenBSD|
					NetBSD|
					DragonFlyBSD|
					BSD|
					Solaris|
					Posix|
					AIX|
					Haiku|
					SkyOS|
					SysV3|
					SysV4|
					Hurd|
					Android|
					Cygwin|
					MinGW|
					FreeStanding|
					X86|
					X86_64|
					ARM|
					ARM_Thumb|
					ARM_SoftFloat|
					ARM_SoftFP|
					ARM_HardFloat|
					AArch64|
					Epiphany|
					PPC|
					PPC_SoftFloat|
					PPC_HardFloat|
					PPC64|
					IA64|
					MIPS32|
					MIPS64|
					MIPS_O32|
					MIPS_N32|
					MIPS_O64|
					MIPS_N64|
					MIPS_EABI|
					MIPS_SoftFloat|
					MIPS_HardFloat|
					NVPTX|
					NVPTX64|
					SPARC|
					SPARC_V8Plus|
					SPARC_SoftFloat|
					SPARC_HardFloat|
					SPARC64|
					S390|
					S390X|
					HPPA|
					HPPA64|
					SH|
					SH64|
					Alpha|
					Alpha_SoftFloat|
					Alpha_HardFloat|
					LittleEndian|
					BigEndian|
					D_Coverage|
					D_Ddoc|
					D_InlineAsm_X86|
					D_InlineAsm_X86_64|
					D_LP64|
					D_X32|
					D_HardFloat|
					D_SoftFloat|
					D_PIC|
					D_SIMD|
					D_Version2|
					D_NoBoundsChecks|
					unittest|
					assert|
					none|
					all)|(darwin|Thumb)|([A-Za-z_][A-Za-z0-9_]*))
					\s*\)</string>
			<key>name</key>
			<string>meta.version.volt</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.conditional.volt</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.control.conditional.volt</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.conditional.volt</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*\b((else|switch)|((static)\s+)?(if))\b</string>
			<key>name</key>
			<string>meta.control.conditional.volt</string>
		</dict>
		<!--
		<dict>
			<key>begin</key>
			<string>(?x)(?&lt;=^|\}|;)\s*
					(?&lt;meta_modifier&gt;
						(?:
							(?:
								(?:(?:\b(?:public|private|protected|static|final|synchronized|abstract|export|shared|global|local)\b)) |
								(?:\b(?:extern)\b(?:\s*\(\s*(?:(?:(?:C\+\+)(?:\s*,\s*[A-Za-z_][A-Za-z0-9._]*)?)|\b(?:C|D|Windows|Pascal|System|Volt)\b)\s*\))?)
							)\s*
						)*
					)
					(?&lt;structure&gt;class|interface)\s+
					(?&lt;identifier&gt;\w+)\s* # identifier
					(?:\(\s*(?&lt;template_params&gt;[^\)]+)\s*\)|)\s* # Template type
					(?:
					  \s*(?&lt;inheritance_separator&gt;:)\s*
					  (?&lt;inherited&gt;\w+)
					  (?:\s*,\s*(?&lt;inherited&gt;\w+))?
					  (?:\s*,\s*(?&lt;inherited&gt;\w+))?
					  (?:\s*,\s*(?&lt;inherited&gt;\w+))?
					  (?:\s*,\s*(?&lt;inherited&gt;\w+))?
					  (?:\s*,\s*(?&lt;inherited&gt;\w+))?
					  (?:\s*,\s*(?&lt;inherited&gt;\w+))?
					)? # super class
					</string>
			<key>beginCaptures</key>
			<dict>
				<key>identifier</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.volt</string>
				</dict>
				<key>inheritance_separator</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.inheritance.volt</string>
				</dict>
				<key>inherited</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.volt</string>
				</dict>
				<key>meta_modifier</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#meta-modifier</string>
						</dict>
					</array>
				</dict>
				<key>structure</key>
				<dict>
					<key>name</key>
					<string>storage.type.structure.volt</string>
				</dict>
				<key>template_params</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$base</string>
						</dict>
					</array>
				</dict>
			</dict>
			<key>end</key>
			<string>(?={|;)</string>
			<key>name</key>
			<string>meta.definition.class.volt</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(_|:)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.volt</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?={)</string>
					<key>name</key>
					<string>meta.definition.class.extends.volt</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#all-types</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#template-constraint-d</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?x)(?&lt;=^|\}|;)\s*
					(?&lt;meta_modifier&gt;
						(?:
							(?:
								(?:(?:\b(?:public|private|protected|static|final|synchronized|abstract|export|shared)\b)) |
								(?:\b(?:extern)\b(?:\s*\(\s*(?:(?:(?:C\+\+)(?:\s*,\s*[A-Za-z_][A-Za-z0-9._]*)?)|\b(?:C|D|Windows|Pascal|System|Objective-C)\b)\s*\))?)
							)\s*
						)*
					)
					(?&lt;structure&gt;struct)\s+
					(?&lt;identifier&gt;\w+)\s*
					(?:\(\s*(?&lt;template_params&gt;[^\)]+)\s*\)|)\s*
					</string>
			<key>beginCaptures</key>
			<dict>
				<key>identifier</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.struct.volt</string>
				</dict>
				<key>meta_modifier</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#meta-modifier</string>
						</dict>
					</array>
				</dict>
				<key>structure</key>
				<dict>
					<key>name</key>
					<string>storage.type.structure.volt</string>
				</dict>
				<key>template_params</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$base</string>
						</dict>
					</array>
				</dict>
			</dict>
			<key>end</key>
			<string>(?={|;)</string>
			<key>name</key>
			<string>meta.definition.struct.volt</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(_|:)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.volt</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?={)</string>
					<key>name</key>
					<string>meta.definition.class.extends.volt</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#all-types</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#template-constraint-d</string>
				</dict>
			</array>
		</dict>
		-->
		<dict>
			<key>begin</key>
			<string>(?x)(?&lt;=^|\}|;)\s*
					((?:\b(public|private|protected|static|final|synchronized|abstract|export)\b\s*)*) # modifier
					(\b(this))\s* # identifier
					(?=\()</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.volt</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.constructor.volt</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?={|;)</string>
			<key>name</key>
			<string>meta.definition.constructor.volt</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?x)
    				(?:  ^                                 # begin-of-line
    				  |  (?: (?&lt;!else|new|=) )             #  or word + space before name
    				)
					((?:\b(?:public|private|protected|static|final|synchronized|abstract|export)\b\s*)*) # modifier
    				(~this) # actual name
    				 \s*(\()                           # start bracket or end-of-line
    			</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.volt</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.destructor.volt</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.volt</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.definition.destructor.volt</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?x)(?&lt;=^|\}|;)\s*
					((?:\b(?:public|private|protected|static|final|synchronized|abstract|export|override|auto|nothrow|immutable|const|inout|ref|shared)\b\s*)*) # modifier
					(?:(_|\w[^"'`\s]*))\s+ # return type
					(\w+)\s* # identifier
					(?=\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.volt</string>
				</dict>
				<key>2</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$base</string>
						</dict>
					</array>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.volt</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?={|;)</string>
			<key>name</key>
			<string>meta.definition.method.volt</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?x)(?&lt;=^|;)\s*
					(__traits)
					\(
					(isAbstractClass|
					isArithmetic|
					isAssociativeArray|
					isFinalClass|
					isPOD|
					isNested|
					isFloating|
					isIntegral|
					isScalar|
					isStaticArray|
					isUnsigned|
					isVirtualFunction|
					isVirtualMethod|
					isAbstractFunction|
					isFinalFunction|
					isStaticFunction|
					isOverrideFunction|
					isRef|
					isOut|
					isLazy|
					hasMember|
					identifier|
					getAliasThis|
					getAttributes|
					getFunctionAttributes|
					getMember|
					getOverloads|
					getPointerBitmap|
					getProtection|
					getVirtualFunctions|
					getVirtualMethods|
					getUnitTests|
					parent|
					classInstanceSize|
					getVirtualIndex|
					allMembers|
					derivedMembers|
					isSame|
					compiles)
					</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.special.volt</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.language.traits.volt</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\);</string>
			<key>name</key>
			<string>meta.traits.volt</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<!--
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#meta-external</string>
						</dict>
					</array>
				</dict>
			</dict>
			<key>match</key>
			<string>(\b(?:extern)\b(?:\s*\(\s*(?:(?:(?:C\+\+)(?:\s*,\s*[A-Za-z_][A-Za-z0-9._]*)?)|\b(?:C|D|Windows|Pascal|System|Objective-C)\b)\s*\))?)</string>
			<key>name</key>
			<string>meta.external.volt</string>
		</dict>
		-->
		<dict>
			<key>match</key>
			<string>\b([A-Z][A-Z0-9_]+)\b</string>
			<key>name</key>
			<string>constant.other.volt</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#all-types</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(private|protected|public|export|package)\b</string>
			<key>name</key>
			<string>storage.modifier.access-control.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)
				\b(
					auto|
					static|
					override|
					final|
					abstract|
					volatile|
					synchronized|
					lazy|
					nothrow|
					immutable|
					const|
					inout|
					ref|
					in|
					scope|
					__gshared|
					global|
					local|
					shared|
					pure|
					extern
				)
				\b|
				(@)(
					property|
					disable|
					nogc|
					safe|
					trusted|
					system
				)\b</string>
			<key>name</key>
			<string>storage.modifier.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(template|interface|class|enum|struct|union)\b</string>
			<key>name</key>
			<string>storage.type.structure.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)
				\b(
					ushort|
					int|
					uint|
					long|
					ulong|
					float|
					void|
					byte|
					ubyte|
					double|
					char|
					wchar|
					ucent|
					cent|
					short|
					bool|
					dchar|
					real|
					ireal|
					ifloat|
					idouble|
					creal|
					cfloat|
					cdouble|
					lazy|
					i8|
					u8|
					i16|
					u16|
					i32|
					u32|
					i64|
					u64|
					f32|
					f64|
					__vector
				)\b</string>
			<key>name</key>
			<string>storage.type.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(try|catch|finally|throw)\b</string>
			<key>name</key>
			<string>keyword.control.exception.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(return|break|case|continue|default|do|while|for|switch|if|else)\b</string>
			<key>name</key>
			<string>keyword.control.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(goto|break|continue)\b</string>
			<key>name</key>
			<string>keyword.control.branch.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(while|for|do|foreach(_reverse)?)\b</string>
			<key>name</key>
			<string>keyword.control.repeat.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(return|with|invariant|body|scope|asm|mixin|function|delegate|fn|dg|out|in)\b</string>
			<key>name</key>
			<string>keyword.control.statement.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(pragma)\b</string>
			<key>name</key>
			<string>keyword.control.pragma.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(alias|typedef)\b</string>
			<key>name</key>
			<string>keyword.control.alias.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(import)\b</string>
			<key>name</key>
			<string>keyword.control.import.volt</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.module.volt</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.package.volt</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(module)\s+([^ ;]+?);</string>
			<key>name</key>
			<string>meta.module.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(true|false)\b</string>
			<key>name</key>
			<string>constant.language.boolean.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)
				\b(
					__FILE__|
					__LINE__|
					__DATE__|
					__TIME__|
					__TIMESTAMP__|
					__MODULE__|
					__FUNCTION__|
					__PRETTY_FUNCTION__|
					__VENDOR__|
					__VERSION__|
					null
				)\b</string>
			<key>name</key>
			<string>constant.language.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(this|super)\b</string>
			<key>name</key>
			<string>variable.language.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)([LlFfUuDd]|UL|ul)?\b</string>
			<key>name</key>
			<string>constant.numeric.volt</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_escaped_char</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(==|!=|&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;)</string>
			<key>name</key>
			<string>keyword.operator.comparison.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\-\-|\+\+)</string>
			<key>name</key>
			<string>keyword.operator.increment-decrement.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\-|\+|\*|\/|~|%|\^|\^\^)=?</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\.\.\.)</string>
			<key>name</key>
			<string>keyword.operator.variadic.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\.\.)</string>
			<key>name</key>
			<string>keyword.operator.slice.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(!|&amp;&amp;|\|\|)</string>
			<key>name</key>
			<string>keyword.operator.logical.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)
				\b(
					opNeg|
					opCom|
					opPostInc|
					opPostDec|
					opCast|
					opAdd|
					opSub|
					opSub_r|
					opMul|
					opDiv|
					opDiv_r|
					opMod|
					opMod_r|
					opAnd|
					opOr|
					opXor|
					opShl|
					opShl_r|
					opShr|
					opShr_r|
					opUShr|
					opUShr_r|
					opCat|
					opCat_r|
					opEquals|
					opEquals|
					opCmp|
					opCmp|
					opCmp|
					opCmp|
					opAddAssign|
					opSubAssign|
					opMulAssign|
					opDivAssign|
					opModAssign|
					opAndAssign|
					opOrAssign|
					opXorAssign|
					opShlAssign|
					opShrAssign|
					opUShrAssign|
					opCatAssign|
					opIndex|
					opIndexAssign|
					opCall|
					opSlice|
					opSliceAssign|
					opPos|
					opAdd_r|
					opMul_r|
					opAnd_r|
					opOr_r|
					opXor_r|
					opDispatch
				)\b</string>
			<key>name</key>
			<string>keyword.operator.overload.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>=&gt;</string>
			<key>name</key>
			<string>keyword.operator.lambda.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(new|delete|typeof|typeid|cast|align|is)\b</string>
			<key>name</key>
			<string>keyword.operator.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(new)\b</string>
			<key>name</key>
			<string>keyword.other.class-fns.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(__parameters)\b|(#)line\b</string>
			<key>name</key>
			<string>keyword.other.special.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(macro)\b</string>
			<key>name</key>
			<string>keyword.other.reserved.volt</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)
				\b(
					u_char|
					u_short|
					u_int|
					u_long|
					ushort|
					uint|
					u_quad_t|
					quad_t|
					qaddr_t|
					caddr_t|
					daddr_t|
					dev_t|
					fixpt_t|
					blkcnt_t|
					blksize_t|
					gid_t|
					in_addr_t|
					in_port_t|
					ino_t|
					key_t|
					mode_t|
					nlink_t|
					id_t|
					pid_t|
					off_t|
					segsz_t|
					swblk_t|
					uid_t|
					id_t|
					clock_t|
					size_t|
					ssize_t|
					time_t|
					useconds_t|
					suseconds_t
				)\b</string>
			<key>name</key>
			<string>support.type.sys-types.c</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)
				\b(
					pthread_attr_t|
					pthread_cond_t|
					pthread_condattr_t|
					pthread_mutex_t|
					pthread_mutexattr_t|
					pthread_once_t|
					pthread_rwlock_t|
					pthread_rwlockattr_t|
					pthread_t|
					pthread_key_t
				)\b</string>
			<key>name</key>
			<string>support.type.pthread.c</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)
				\b(
					int8_t|
					int16_t|
					int32_t|
					int64_t|
					uint8_t|
					uint16_t|
					uint32_t|
					uint64_t|
					int_least8_t|
					int_least16_t|
					int_least32_t|
					int_least64_t|
					uint_least8_t|
					uint_least16_t|
					uint_least32_t|
					uint_least64_t|
					int_fast8_t|
					int_fast16_t|
					int_fast32_t|
					int_fast64_t|
					uint_fast8_t|
					uint_fast16_t|
					uint_fast32_t|
					uint_fast64_t|
					intptr_t|
					uintptr_t|
					intmax_t|
					intmax_t|
					uintmax_t|
					uintmax_t
				)\b</string>
			<key>name</key>
			<string>support.type.stdint.c</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#block</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>text.volt</string>
	<key>repository</key>
	<dict>
		<key>all-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#support-type-built-ins-d</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support-type-d</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage-type-d</string>
				</dict>
			</array>
		</dict>
		<key>block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.begin.volt</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.end.volt</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.block.volt</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$base</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.volt</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.volt</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\+</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.volt</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\+/</string>
					<key>name</key>
					<string>comment.block.nested.volt</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=//)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.volt</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>//</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.volt</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\n</string>
							<key>name</key>
							<string>comment.line.double-slash.volt</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>constant_placeholder</key>
		<dict>
			<key>match</key>
			<string>(?i:%(\([a-z_]+\))?#?0?\-?[ ]?\+?([0-9]*|\*)(\.([0-9]*|\*))?[hL]?[a-z%])</string>
			<key>name</key>
			<string>constant.other.placeholder.volt</string>
		</dict>
		<!--
		<key>meta-external</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>identifier</key>
				<dict>
					<key>name</key>
					<string>constant.language.external.volt</string>
				</dict>
				<key>keyword</key>
				<dict>
					<key>name</key>
					<string>keyword.other.external.volt</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(?&lt;keyword&gt;extern)\b(\s*\(\s*(?:(?:(?&lt;identifier&gt;C\+\+)(?:\s*,\s*[A-Za-z_][A-Za-z0-9._]*)?)|(?&lt;identifier&gt;C|D|Windows|Pascal|System|Objective-C))\s*\))?</string>
			<key>name</key>
			<string>meta.external.volt</string>
		</dict>
		-->
		<key>meta-modifier</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>meta_external</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#meta-external</string>
						</dict>
					</array>
				</dict>
				<key>modifier</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.volt</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)
				(?:
					(?&lt;modifier&gt;\b(?:public|private|protected|static|final|synchronized|abstract|export|shared)\b) |
					(?&lt;meta_external&gt;\b(?:extern)\b(?:\s*\(\s*(?:(?:(?:C\+\+)(?:\s*,\s*[A-Za-z_][A-Za-z0-9._]*)?)|\b(?:C|D|Windows|Pascal|System|Objective-C)\b)\s*\))?)
				)\s*
			</string>
			<key>name</key>
			<string>meta.modifier.volt</string>
		</dict>
		<key>regular_expressions</key>
		<dict>
			<key>comment</key>
			<string>Change disabled to 1 to turn off syntax highlighting in “r” strings.</string>
			<key>disabled</key>
			<integer>1</integer>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.regexp.python</string>
				</dict>
			</array>
		</dict>
		<key>statement-remainder</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>(?=\))</string>
					<key>name</key>
					<string>meta.definition.param-list.volt</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#all-types</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>storage-type-d</key>
		<dict>
			<key>match</key>
			<string>\b(void|byte|short|char|int|long|float|double)\b</string>
			<key>name</key>
			<string>storage.type.volt</string>
		</dict>
		<key>string_escaped_char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(\\|[abefnprtv'"?]|[0-3]\d{0,2}|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8}|&amp;\w+;)</string>
					<key>name</key>
					<string>constant.character.escape.volt</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>invalid.illegal.unknown-escape.volt</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.volt</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.volt</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.volt</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(r)(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.volt</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.volt</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?&lt;=")(")|")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.volt</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.volt</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.raw.volt</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.volt</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?&lt;=`)(`)|`)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.volt</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.volt</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.raw.backtick.volt</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.volt</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.volt</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.volt</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_escaped_char</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
</dict>
</plist>
